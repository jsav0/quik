#!/bin/sh
# n0
# this script provisions a void linux host for recon and offensive hacking
# author: wfnintr@null.net
# a110w

# xbps packages 
common_utils="\
	curl \
	docker \
	fish-shell \
	git \
	go \
	gcc \
	inetutils \
	make \
	neovim \
	nmap \
	openbsd-netcat \
	pkg-config \
	python3 \
	python3-pip \
	python-setuptools \
	sshuttle \
	tcpdump \
	tor \
	proxychains-ng \
	p7zip \
	wget \
	wireguard-tools \
	"
	
toolz=" \
	Amass \
	fierce \
	termshark \
	john \
	thc-hydra \
	net-snmp \
	gdb \
	binwalk \
	exiftool \
	wfuzz \
	gfuzz \
	gobuster \
	ffuf \
	sqlmap \
	smbclient \
	chromium \ # ffs, why is whktoimage not working!!!
	"


# bashrc
cat <<- EOF >$HOME/.bashrc
	export PATH=$HOME/go/bin:/usr/local/bin/:$PATH
	export EDITOR=/usr/bin/nvim
	exec fish
EOF

# fish, inherits ~/.bashrc
mkdir -p ~/.config/fish
printf "source ~/.config/fish/aliases.fish\n" >> $HOME/.config/fish/config.fish
cat <<- EOF >$HOME/.config/fish/aliases.fish
	alias vi 'nvim'
	alias dirsearch 'docker run -it --rm -v /usr/share/wordlists:/wordlists wfnintr/dirsearch'
	alias amass 'mkdir -p amass && docker run -v (pwd)/amass:/.config/amass/ caffix/amass'
	alias knockpy 'docker run --rm -t wfnintr/knockpy'
EOF

# update
xbps-install -Su

# install common utils
xbps-install -Suy $common_utils

# install toolz
xbps-install -Suy $toolz

# enable docker
usermod -aG docker void
ln -sf /etc/sv/docker /var/service/

# start tor, proxychains4 already configured
ln -sf /etc/sv/tor /var/service/

# install seclists
git clone https://github.com/danielmiessler/SecLists.git /usr/share/wordlists/seclists

# install ciphey (https://github.com/Ciphey/Ciphey)
pip3 install ciphey

# subfinder (github.com/projectdiscovery/subfinder)
# basic usage: subfinder -d <domain.tld>
wget --quiet https://github.com/projectdiscovery/subfinder/releases/download/v2.4.4/subfinder_2.4.4_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ subfinder

# naabu (github.com/projectdiscovery/naabu)
# Basic Usage:
wget --quiet https://github.com/projectdiscovery/naabu/releases/download/v2.0.2/naabu_2.0.2_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ naabu

# crlfuzz (github.com/dwisiswant0/crlfuzz)
# Basic usage: crlfuzz -u "http://target"
wget --quiet https://github.com/dwisiswant0/crlfuzz/releases/download/v1.4.0/crlfuzz_1.4.0_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ crlfuzz

# gau (github.com/lc/gau)
# Fetch known URLs from AlienVault's Open Threat Exchange, the Wayback Machine, and Common Crawl
# Basic Usage: gau -o <outfile> <domain>
wget --quiet https://github.com/lc/gau/releases/download/v1.0.5/gau_1.0.5_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin gau

# gospider 
go get -u github.com/jaeles-project/gospider

# wraith (github.com/N0MoreSecr3ts/wraith)
mkdir -p $HOME/go/src && cd $HOME/go/src
[ ! -d wraith ] && {
	git clone https://github.com/N0MoreSecr3ts/wraith && {
		cd wraith && \
		make build
	}
}


# knockpy (removed in favour of docker container wfnintr/knockpy)
# basic usage:
#[ ! -d /usr/local/bin/knockpy ] && {
#	git clone https://github.com/guelfoweb/knock.git /usr/local/bin/knockpy && {
#		cd /usr/local/bin/knockpy && \
#		python setup.py install
#	}
#}

# install pspy
#mkdir -p /usr/share/linux-bin
#git clone https://github.com/DominicBreuker/pspy.git /tmp/pspy
#cd /tmp/pspy && {
#	/bin/bash -lc "/usr/local/go/bin/go get"
#	/bin/bash -lc "GOARCH=386 /usr/local/go/bin/go build" # build 32bit binary
#	cp pspy /usr/share/linux-bin/pspy32
#      	chmod 0755 /usr/share/linux-bin/pspy32
#	/bin/bash -lc "GOARCH=amd64 /usr/local/go/bin/go build" # build 64bit binary
#	cp pspy /usr/share/linux-bin/pspy64
#	chmod 0755 /usr/share/linux-bin/pspy64
#	cd -
#    	rm -rf /tmp/pspy /opt/go/bin/pspy
#}

# install xsser (https://github.com/epsylon/xsser.git)
#pip3 install pycurl bs4 geoip2 gobject cairocffi
#git clone https://github.com/epsylon/xsser.git /opt/xsser
#chmod 0755 /opt/xsser/xsser
#ln -sf /opt/xsser/xsser /usr/bin/xsser

# install peda 
#git clone https://github.com/longld/peda.git /home/void/.peda
#cat > /home/void/.gdbinit <<- EOF
#	source ~/.peda/peda.py
#EOF

# st terminfo
tic -sx /tmp/st.info
mkdir -p $HOME/.ssh && cp /home/void/.ssh/authorized_keys $HOME/.ssh/authorized_keys && {
	printf "\nDone. SSH key copied to root.\n"
}

#printf "Rebooting...\n" && init 6
